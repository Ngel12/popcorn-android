buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'hugo'//for method logging (only in debug builds)
apply plugin: 'com.github.ben-manes.versions'// to check for dependency updates
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "pct.droid"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: 0
        versionName "0.1.2"
    }

    signingConfigs {
        mainConfig {
            keyAlias System.getenv("S_ALIAS").toString() ?: ""
            keyPassword System.getenv("S_KEYPASS").toString() ?: ""
            storeFile file(System.getenv("S_KEYSTORE").toString()) ?: file("")
            storePassword System.getenv("S_KEYPASS").toString() ?: ""
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.mainConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "#" + (System.getenv("BUILD_NUMBER") == null ? "local" : "dev" + System.getenv("BUILD_NUMBER")) + (System.getenv("GIT_BRANCH") == null ? "" : "-git-" + System.getenv("GIT_BRANCH").replace("origin/", ""))
            applicationIdSuffix ".dev"
        }
    }

    lintOptions {
        abortOnError false
    }

    splits {
        abi {
            enable true
            universalApk false
            reset()
            include 'armeabi', 'armeabi-v7a', 'x86'
        }
    }

    project.ext.versionCodes = ["armeabi": 1, "armeabi-v7a": 2, "arm64-v8a": 3, "x86": 4]

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def abi = output.getFilter(com.android.build.OutputFile.ABI);
            output.versionCodeOverride = project.ext.versionCodes.get(abi, 0) * 1000000 + output.versionCode

            def alignedOutputFile = output.outputFile
            def unalignedOutputFile = output.packageApplication.outputFile
            def outputFileName = alignedOutputFile.name

            // Customise APK filenames
            if (outputFileName.contains("debug")) {
                outputFileName = outputFileName.replace("debug", "development").replace(".apk", "-" + (System.getenv("BUILD_NUMBER") ?: "local") + ".apk")
            } else {
                outputFileName = outputFileName.replace(".apk", "-" + variant.versionName + ".apk")
            }

            if (variant.buildType.zipAlignEnabled) {
                // normal APK
                output.outputFile = new File(alignedOutputFile.parent, outputFileName)
            }
            // 'unaligned' APK
            output.packageApplication.outputFile = new File(unalignedOutputFile.parent, outputFileName.replace(".apk", "-unaligned.apk"))
        }
    }
}

//to check for dependency updates,
//run ./gradlew dependencyUpdates -Drevision=release
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:palette-v7:21.+'
    compile 'com.android.support:recyclerview-v7:21.+'
    compile 'de.hdodenhof:circleimageview:1.+'
    compile 'com.android.support:mediarouter-v7:21.+'
    compile 'com.android.support:support-annotations:21.+'
    compile 'com.squareup.okhttp:okhttp:2.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.+'
    compile 'com.squareup.picasso:picasso:2.+'
    compile 'com.google.code.gson:gson:2.+'
    compile 'com.jakewharton:butterknife:6.+'
    compile 'com.github.nirhart:parallaxscroll:1.+'
    compile 'com.larswerkman:HoloColorPicker:1.+'
    compile 'net.rdrei.android.dirchooser:library:2.+@aar'
    compile 'com.github.gabrielemariotti.changeloglib:library:1.+'

    compile('com.crashlytics.sdk.android:crashlytics:2.2.0@aar') {
        transitive = true;
    }

    compile project(':base')
    compile project(':vlc')
    compile project(':node')
    compile project(':xmlrpc')
}